/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package improvecaro;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.ImageIcon;

/**
 *
 * @author Acer
 */
public class GameNotfication extends javax.swing.JPanel {

    private ImproveCaro parent;
    private MouseListener blockingMouseListener;
    public static final String REPLAY = "replay";
    public static final String MENU = "returnMenu";

    /**
     * Creates new form GameNotfication
     */
    public GameNotfication(ImproveCaro parent) {

        initComponents();
        this.parent = parent;
        this.setBounds(0, 0, 1920, 1080);

        this.setOpaque(false);
        lblBg.setBackground(new Color(0, 0, 0, 170));

        blockingMouseListener = new MouseAdapter() {
            // Do nothing when mouse events occur
        };

        pnlBg.addMouseListener(blockingMouseListener);

        updateIcon();
        Event();
    }

    public ImageIcon resizeImageIcon(ImageIcon oldImg, int width, int height) {
        return new ImageIcon(oldImg.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH));
    }

    public ImageIcon getIcon(String value, String suffix) {
        return new ImageIcon(getClass().getResource("/img/Menu/" + value + (suffix.equals("") ? "" : "-" + suffix) + ".png"));
    }

    private void updateIcon() {
        int width = lblReplay.getWidth();
        int height = lblReplay.getHeight();

        lblReplay.setIcon(resizeImageIcon(getIcon(REPLAY, Menu.NORMAL), width, height));
        lblReturnToMenu.setIcon(resizeImageIcon(getIcon(MENU, Menu.NORMAL), width, height));

        parent.getPnlMenu().LabelEffect(lblReplay, REPLAY, width, height);
        parent.getPnlMenu().LabelEffect(lblReturnToMenu, MENU, width, height);
    }

    private void Event() {
        lblReplay.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (parent.isRPG()) {
                    parent.getPnlMenu().enableRPGMode();
                    setVisible(false);
                } else if (parent.isNormal()) {
                    parent.getPnlMenu().enableNormalMode();
                    setVisible(false);
                }
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }

        });

        lblReturnToMenu.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                parent.getPnlMenu().enableMenuMode();
                setVisible(false);
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        });

    }

    private void setBlueWin() {
        lblNotification.setLocation(520, 440);
        lblNotification.setForeground(new Color(30, 144, 255));
        lblNotification.setText("Player BLUE win!!");
    }

    private void setRedWin() {
        lblNotification.setLocation(520, 440);
        lblNotification.setForeground(new Color(255, 71, 87));
        lblNotification.setText("Player RED win!!");
    }

    public void setTie() {
        setVisible(true);
        lblNotification.setLocation(700, 440);
        lblNotification.setForeground(new Color(255, 243, 0));
        lblNotification.setText("It's a tie!!");
    }

    @Override
    public void setVisible(boolean aFlag) {
        super.setVisible(aFlag); //To change body of generated methods, choose Tools | Templates.
        if (parent.getTurn() == ImproveCaro.OCell) {
            setRedWin();
        } else if (parent.getTurn() == ImproveCaro.XCell) {
            setBlueWin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlNotification = new javax.swing.JPanel();
        lblNotification = new javax.swing.JLabel();
        lblReturnToMenu = new javax.swing.JLabel();
        lblReplay = new javax.swing.JLabel();
        pnlBg = new javax.swing.JPanel();
        lblBg = new javax.swing.JLabel();

        setLayout(null);

        pnlNotification.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        pnlNotification.setName(""); // NOI18N
        pnlNotification.setOpaque(false);
        pnlNotification.setPreferredSize(new java.awt.Dimension(1920, 1080));
        pnlNotification.setLayout(null);

        lblNotification.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        lblNotification.setForeground(new java.awt.Color(255, 102, 102));
        lblNotification.setText("Player red win!");
        pnlNotification.add(lblNotification);
        lblNotification.setBounds(520, 440, 1040, 170);

        lblReturnToMenu.setBackground(new java.awt.Color(255, 51, 51));
        lblReturnToMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Menu/returnMenu.png"))); // NOI18N
        lblReturnToMenu.setPreferredSize(new java.awt.Dimension(100, 100));
        pnlNotification.add(lblReturnToMenu);
        lblReturnToMenu.setBounds(1130, 650, 100, 100);

        lblReplay.setBackground(new java.awt.Color(255, 51, 51));
        lblReplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Menu/replay.png"))); // NOI18N
        lblReplay.setPreferredSize(new java.awt.Dimension(100, 100));
        pnlNotification.add(lblReplay);
        lblReplay.setBounds(680, 650, 100, 100);

        add(pnlNotification);
        pnlNotification.setBounds(0, 0, 1920, 1080);

        pnlBg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        pnlBg.setOpaque(false);
        pnlBg.setPreferredSize(new java.awt.Dimension(1920, 1080));
        pnlBg.setLayout(null);

        lblBg.setBackground(new java.awt.Color(0, 0, 0));
        lblBg.setOpaque(true);
        lblBg.setPreferredSize(new java.awt.Dimension(1920, 1080));
        pnlBg.add(lblBg);
        lblBg.setBounds(0, 0, 1920, 1080);

        add(pnlBg);
        pnlBg.setBounds(0, 0, 1920, 1080);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblBg;
    private javax.swing.JLabel lblNotification;
    private javax.swing.JLabel lblReplay;
    private javax.swing.JLabel lblReturnToMenu;
    private javax.swing.JPanel pnlBg;
    private javax.swing.JPanel pnlNotification;
    // End of variables declaration//GEN-END:variables

}
