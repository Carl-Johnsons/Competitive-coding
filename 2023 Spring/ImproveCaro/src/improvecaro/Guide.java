/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package improvecaro;

import java.awt.Cursor;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author Acer
 */
public class Guide extends javax.swing.JFrame {

    /**
     * Creates new form Guide
     */
    int page;
    private static final int MAX_PAGE = 3;
    private JLabel[] nextPrev;
    private static final String NEXT = "next";
    private static final String PREV = "prev";
    //State of the button
    private static final String ACTIVE = "active";
    private static final String HOVER = "hover";
    private static final String NORMAL = "";
    
    public Guide() {
        initComponents();
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);         //Maximize the frame
        this.setBounds(0, 0, 1920, 1080);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        page = 1;
        updateLblGuide();
        initNextAndPrev();
    }
    
    private void updateLblGuide() {
        lblGuide.setIcon(resizeImg(getPage(page), 1920, 1080));
    }
    
    private void initNextAndPrev() {
        nextPrev = new JLabel[2];
        int width = 70;
        int height = 70;
        int gap = 20;
        for (int i = 0; i < nextPrev.length; i++) {
            nextPrev[i] = new JLabel();
            nextPrev[i].setBounds(1735 + (i * width + i * gap), 1080 - height - 100, width, height);
            pnlGuide.add(nextPrev[i]);
            pnlGuide.setComponentZOrder(nextPrev[i], 0);
        }
        nextPrev[0].setIcon(resizeImg(getBtn(PREV, NORMAL), width, height));
        nextPrev[1].setIcon(resizeImg(getBtn(NEXT, NORMAL), width, height));
        LabelEffect(nextPrev[0], PREV);
        LabelEffect(nextPrev[1], NEXT);
        nextPrev[0].addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                page = (page == 1 ? 3 : page - 1);
                updateLblGuide();
            }
        });
        nextPrev[1].addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                page = (page % MAX_PAGE) + 1;
                updateLblGuide();
            }
        });
    }
    
    private void LabelEffect(JLabel lbl, String suffix) {
        lbl.addMouseListener(new MouseAdapter() {
            int width = lbl.getWidth();
            int height = lbl.getHeight();
            
            @Override
            public void mouseEntered(MouseEvent e) {
                lbl.setIcon(resizeImg(getBtn(suffix, HOVER), width, height));
                setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
                lbl.setIcon(resizeImg(getBtn(suffix, NORMAL), width, height));
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
            
            @Override
            public void mousePressed(MouseEvent e) {
                lbl.setIcon(resizeImg(getBtn(suffix, ACTIVE), width, height));
            }
            
            @Override
            public void mouseReleased(MouseEvent e) {
                lbl.setIcon(resizeImg(getBtn(suffix, HOVER), width, height));
            }
        });
    }
    
    private ImageIcon getPage(int page) {
        return new ImageIcon(getClass().getResource("/img/guide & about us/guide-" + page + ".png"));
    }
    
    private ImageIcon getBtn(String suffix, String state) {
        return new ImageIcon(getClass().getResource("/img/guide & about us/btn-" + suffix + (state.equals("") ? "" : "-" + state) + ".png"));
    }
    
    private ImageIcon resizeImg(ImageIcon oldImg, int width, int height) {
        return new ImageIcon(oldImg.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGuide = new javax.swing.JPanel();
        lblGuide = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        pnlGuide.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        pnlGuide.setPreferredSize(new java.awt.Dimension(1920, 1080));
        pnlGuide.setLayout(null);

        lblGuide.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        lblGuide.setPreferredSize(new java.awt.Dimension(1920, 1080));
        pnlGuide.add(lblGuide);
        lblGuide.setBounds(0, 0, 1920, 1080);

        getContentPane().add(pnlGuide);
        pnlGuide.setBounds(0, 0, 1920, 1080);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Guide().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblGuide;
    private javax.swing.JPanel pnlGuide;
    // End of variables declaration//GEN-END:variables

}
